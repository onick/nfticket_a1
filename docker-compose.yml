services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: tix_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - tix_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tix_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tix_network

  # Elasticsearch for search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: tix_elasticsearch
    restart: unless-stopped
    environment:
      - node.name=tix_es
      - cluster.name=tix_cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - tix_network

  # API Gateway
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: tix_api
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      DATABASE_URL: mongodb://mongodb:27017/tix_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      - mongodb
      - redis
    networks:
      - tix_network
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    command: npm run dev

  # Web Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: tix_web
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
    depends_on:
      - api
    networks:
      - tix_network
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Admin Dashboard
  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    container_name: tix_admin
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
    depends_on:
      - api
    networks:
      - tix_network
    volumes:
      - ./apps/admin:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # MailHog (Email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: tix_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - tix_network

  # Nginx (Development proxy)
  nginx:
    image: nginx:alpine
    container_name: tix_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/dev.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
      - admin
    networks:
      - tix_network

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:

networks:
  tix_network:
    driver: bridge